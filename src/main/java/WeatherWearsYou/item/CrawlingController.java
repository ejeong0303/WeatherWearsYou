package WeatherWearsYou.item;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.transaction.Transactional;

@Controller
@Transactional
@RequestMapping(path="/crawling")
public class CrawlingController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private ItemRepository itemRepository;

    @PostMapping(path="/add/{category}")
    public @ResponseBody String addItemByCategory(@RequestParam Integer productCnt,
                                                  @PathVariable Integer category) throws InterruptedException {
        ItemCrawling.doCrawlingByCategoryID(category, productCnt, itemRepository);

        return "saved";
    }


    /*
    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addItem (@RequestParam Integer id,
                                         @RequestParam Integer category,
                                         @RequestParam String itemType,
                                         @RequestParam String name,
                                         @RequestParam Integer price,
                                         @RequestParam Integer gender,
                                         @RequestParam String imgLink,
                                         @RequestParam String style) {
        Item item = new Item();
        item.setId(id);
        item.setCategory(category);
        item.setItemType(itemType);
        item.setName(name);
        item.setPrice(price);
        item.setGender(gender);
        item.setImgLink(imgLink);
        item.setStyle(style);

        this.itemRepository.save(item);

        return "Saved";
    }

     */

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Item> getAllItems() {
        // This returns a JSON or XML with the items
        return itemRepository.findAll();
    }

    @PostMapping(path="/name")
    public @ResponseBody Iterable<Item> getByName(@RequestParam String name) {
        return itemRepository.getContainingItem(name);
    }

}